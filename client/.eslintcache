[{"C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\index.tsx":"1","C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\layout\\App.tsx":"3","C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\stores\\rootStore.ts":"4","C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\layout\\LoadingComponent.tsx":"5","C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\layout\\NotFound.tsx":"6","C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\features\\home\\HomePage.tsx":"7","C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\stores\\userStore.ts":"8","C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\stores\\commonStore.ts":"9","C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\stores\\modalStore.ts":"10","C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\stores\\bloodWorksStore.ts":"11","C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\features\\user\\LoginForm.tsx":"12","C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\features\\user\\RegisterForm.tsx":"13","C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\api\\agent.ts":"14","C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\common\\form\\TextInput.tsx":"15","C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\common\\form\\ErrorMessage.tsx":"16","C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\features\\bloodworks\\BloodWorksList.tsx":"17","C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\features\\bloodworks\\BloodWorksReport.tsx":"18","C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\common\\modal\\ModalContainer.tsx":"19","C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\layout\\PrivateRoute.tsx":"20","C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\features\\bloodworks\\BloodWorksListItem.tsx":"21","C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\features\\bloodworks\\BloodWorksDashboard.tsx":"22","C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\features\\bloodworks\\BloodWorksSearch.tsx":"23","C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\features\\navigation\\NavBar.tsx":"24","C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\features\\bloodworks\\BloodWorksForm.tsx":"25","C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\models\\bloodWork.ts":"26","C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\common\\form\\DateInput.tsx":"27","C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\features\\bloodworks\\BloodWorkDetails.tsx":"28","C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\features\\bloodworks\\BloodWorkDetailsInfo.tsx":"29"},{"size":823,"mtime":1607298452458,"results":"30","hashOfConfig":"31"},{"size":425,"mtime":499162500000,"results":"32","hashOfConfig":"31"},{"size":2354,"mtime":1607335016087,"results":"33","hashOfConfig":"31"},{"size":727,"mtime":1607305555709,"results":"34","hashOfConfig":"31"},{"size":355,"mtime":1607298945046,"results":"35","hashOfConfig":"31"},{"size":518,"mtime":1607298929318,"results":"36","hashOfConfig":"31"},{"size":3202,"mtime":1607328076539,"results":"37","hashOfConfig":"31"},{"size":1662,"mtime":1607336671661,"results":"38","hashOfConfig":"31"},{"size":783,"mtime":1607305489260,"results":"39","hashOfConfig":"31"},{"size":595,"mtime":1607305629742,"results":"40","hashOfConfig":"31"},{"size":4734,"mtime":1607339081196,"results":"41","hashOfConfig":"31"},{"size":2010,"mtime":1607306927377,"results":"42","hashOfConfig":"31"},{"size":2502,"mtime":1607336557005,"results":"43","hashOfConfig":"31"},{"size":2449,"mtime":1607310633773,"results":"44","hashOfConfig":"31"},{"size":704,"mtime":1607325252945,"results":"45","hashOfConfig":"31"},{"size":778,"mtime":1607297984247,"results":"46","hashOfConfig":"31"},{"size":750,"mtime":1607340211919,"results":"47","hashOfConfig":"31"},{"size":167,"mtime":1607299960546,"results":"48","hashOfConfig":"31"},{"size":551,"mtime":1607301150156,"results":"49","hashOfConfig":"31"},{"size":743,"mtime":1607306914002,"results":"50","hashOfConfig":"31"},{"size":2462,"mtime":1607332222122,"results":"51","hashOfConfig":"31"},{"size":939,"mtime":1607323023424,"results":"52","hashOfConfig":"31"},{"size":167,"mtime":1607300570262,"results":"53","hashOfConfig":"31"},{"size":1164,"mtime":1607320128541,"results":"54","hashOfConfig":"31"},{"size":6321,"mtime":1607340121982,"results":"55","hashOfConfig":"31"},{"size":1352,"mtime":1607335379937,"results":"56","hashOfConfig":"31"},{"size":1182,"mtime":1607335872666,"results":"57","hashOfConfig":"31"},{"size":1206,"mtime":1607334816869,"results":"58","hashOfConfig":"31"},{"size":1819,"mtime":1607334943860,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"nvaevf",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"62"},"C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\index.tsx",[],["124","125"],"C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\layout\\App.tsx",[],"C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\stores\\rootStore.ts",[],"C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\layout\\LoadingComponent.tsx",[],"C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\layout\\NotFound.tsx",[],"C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\features\\home\\HomePage.tsx",[],"C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\stores\\userStore.ts",[],"C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\stores\\commonStore.ts",[],"C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\stores\\modalStore.ts",[],"C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\stores\\bloodWorksStore.ts",[],"C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\features\\user\\LoginForm.tsx",[],"C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\features\\user\\RegisterForm.tsx",[],"C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\api\\agent.ts",["126"],"import axios, { AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { IUser, IUserFormValues } from \"../models/user\";\r\nimport { IBloodWork, IBloodWorksEnvelope } from \"../models/bloodWork\";\r\nimport { history } from \"../..\";\r\n\r\n\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use(\r\n  (config) => {\r\n    const token = window.localStorage.getItem(\"jwt\");\r\n\r\n    if (token) config.headers.Authorization = `Bearer ${token}`;\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxios.interceptors.response.use(undefined, (error) => {\r\n  if (error.message === \"Network Error\" && !error.response) {\r\n    toast.error(\"Network error!\");\r\n  }\r\n  const { status, data, config } = error.response;\r\n  if (status === 404) {\r\n    \r\n  }\r\n\r\n  if (status === 401) {\r\n    window.localStorage.removeItem(\"jwt\");\r\n    history.push(\"/\");\r\n    toast.info(\"Your session has expired please login again\");\r\n    return Promise.reject(error);\r\n  }\r\n  \r\n\r\n  if (\r\n    status === 400 &&\r\n    config.method === \"get\" &&\r\n    data.errors.hasOwnProperty(\"id\")\r\n  ) {\r\n    history.push(\"/notfound\");\r\n  }\r\n  if (status === 500) {\r\n    toast.error(\"Server error- check the terminal for more info!\");\r\n  }\r\n  throw error.response;\r\n});\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\nconst requests = {\r\n  get: (url: string) => axios.get(url).then(responseBody),\r\n  post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\r\n  put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\r\n  delete: (url: string) => axios.delete(url).then(responseBody),\r\n}\r\n\r\nconst BloodWorks = {\r\n  list: (): Promise<IBloodWorksEnvelope> =>\r\n    axios\r\n      .get(\"/bloodWorks\")\r\n      .then(responseBody),\r\n  details: (id: string) => requests.get(`/bloodWorks/${id}`),\r\n  create: (bloodWork: IBloodWork) => requests.post(\"/bloodWorks\", bloodWork),\r\n  update: (bloodWork: IBloodWork) =>\r\n    requests.put(`/bloodWorks/${bloodWork.id}`, bloodWork),\r\n  delete: (id: string) => requests.delete(`/bloodWorks/${id}`),\r\n\r\n};\r\n\r\nconst User = {\r\n  current: (): Promise<IUser> => requests.get(\"/user\"),\r\n  login: (user: IUserFormValues): Promise<IUser> =>\r\n    requests.post(`/user/login`, user),\r\n  register: (user: IUserFormValues): Promise<IUser> =>\r\n    requests.post(`/user/register`, user),\r\n};\r\n\r\n\r\n\r\nexport default {\r\n  User,\r\n  BloodWorks\r\n}\r\n","C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\common\\form\\TextInput.tsx",[],"C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\common\\form\\ErrorMessage.tsx",[],"C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\features\\bloodworks\\BloodWorksList.tsx",[],"C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\features\\bloodworks\\BloodWorksReport.tsx",[],["127","128"],"C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\common\\modal\\ModalContainer.tsx",[],"C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\layout\\PrivateRoute.tsx",[],"C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\features\\bloodworks\\BloodWorksListItem.tsx",["129"],"import React from \"react\";\r\nimport { Item, Button, Segment, List } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IBloodWork } from \"../../models/bloodWork\";\r\nimport BloodWorksSearch from \"./BloodWorksSearch\";\r\n\r\nconst ActivityListItems: React.FC<{ bloodWork: IBloodWork }> = ({\r\n  bloodWork,\r\n}) => {\r\n  return (\r\n    <Segment.Group style={{ border: \"1px solid black\" }}>\r\n      <Segment>\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Content>\r\n              <Item.Header>\r\n                <List horizontal relaxed=\"very\">\r\n                  <List.Item>\r\n                    {\" \"}\r\n                    Exam Date:{\" \"}\r\n                    {new Date(bloodWork.examDate).toISOString().split(\"T\")[0]}\r\n                  </List.Item>\r\n                  <List.Item>\r\n                    Result Date:{\" \"}\r\n                    {\r\n                      new Date(bloodWork.resultsDate)\r\n                        .toISOString()\r\n                        .split(\"T\")[0]\r\n                    }\r\n                  </List.Item>\r\n                  <List.Item>\r\n                    Record Added:{\" \"}\r\n                    {\r\n                      new Date(bloodWork.dateCreated)\r\n                        .toISOString()\r\n                        .split(\"T\")[0]\r\n                    }\r\n                  </List.Item>\r\n                </List>\r\n              </Item.Header>\r\n\r\n              <Item.Description>\r\n                <List celled horizontal>\r\n                  <List.Item> Hemoglobin: {bloodWork.hemoglobin}</List.Item>\r\n                  <List.Item> Hemotacrit: {bloodWork.hematocrit}</List.Item>\r\n                  <List.Item>\r\n                    {\" \"}\r\n                    White Blood Cells: {bloodWork.wbCellsCount}\r\n                  </List.Item>\r\n                  <List.Item>\r\n                    {\" \"}\r\n                    Red Blood Cells: {bloodWork.rbCellsCount}\r\n                  </List.Item>\r\n                </List>\r\n              </Item.Description>\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment secondary></Segment>\r\n\r\n      <Segment clearing>\r\n        <span>{bloodWork.description}</span>\r\n\r\n        <Button\r\n          floated=\"right\"\r\n          content=\"View\"\r\n          color=\"green\"\r\n          as={Link}\r\n          to={`/bloodwork/${bloodWork.id}`}\r\n        />\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n};\r\n\r\nexport default ActivityListItems;\r\n","C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\features\\bloodworks\\BloodWorksDashboard.tsx",["130"],"import React, { useEffect, useContext } from \"react\";\r\nimport { Container, Grid, Segment } from \"semantic-ui-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\nimport BloodWorksList from \"./BloodWorksList\";\r\nimport BloodWorksSearch from \"./BloodWorksSearch\";\r\n\r\nconst BloodWorksDashboard = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { loadBloodWorks } = rootStore.bloodWorksStore;\r\n\r\n  useEffect(() => {\r\n    loadBloodWorks();\r\n  }, [loadBloodWorks]);\r\n\r\n  return (\r\n    <Container style={{ marginTop: \"4em\" }}>\r\n      <Grid>\r\n        <Grid.Column width={10}>\r\n          <BloodWorksList />\r\n        </Grid.Column>\r\n        <Grid.Column width={6}>\r\n          <BloodWorksSearch />\r\n        </Grid.Column>\r\n        <Grid.Column width={10}></Grid.Column>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default observer(BloodWorksDashboard);\r\n","C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\features\\bloodworks\\BloodWorksSearch.tsx",[],"C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\features\\navigation\\NavBar.tsx",[],"C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\features\\bloodworks\\BloodWorksForm.tsx",["131"],"C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\models\\bloodWork.ts",[],"C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\common\\form\\DateInput.tsx",[],"C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\features\\bloodworks\\BloodWorkDetails.tsx",[],"C:\\Users\\CEN-ISIT-NB01\\Desktop\\medchart\\Bloodworks\\client\\src\\app\\features\\bloodworks\\BloodWorkDetailsInfo.tsx",["132","133","134","135","136","137","138","139","140","141"],"import React, { useContext } from \"react\";\r\nimport {\r\n  Segment,\r\n  Item,\r\n  Header,\r\n  Button,\r\n  Image,\r\n  List,\r\n  Card,\r\n} from \"semantic-ui-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { format } from \"date-fns\";\r\nimport { RootStoreContext } from \"../../stores/rootStore\";\r\nimport { IBloodWork } from \"../../models/bloodWork\";\r\n\r\nconst activityImageStyle = {\r\n  filter: \"brightness(30%)\",\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"5%\",\r\n  left: \"5%\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  color: \"white\",\r\n};\r\n\r\nconst BloodWorkDetailsInfo: React.FC<{ bloodWork: IBloodWork }> = ({\r\n  bloodWork,\r\n}) => {\r\n  return (\r\n    <Card>\r\n      <Card.Content>\r\n        <Card.Header>\r\n          Exam Date: {bloodWork.examDate.toString().split(\"T\")[0]}\r\n        </Card.Header>\r\n        <Card.Meta>\r\n          Result Date: {bloodWork.resultsDate.toString().split(\"T\")[0]}\r\n        </Card.Meta>\r\n        <Card.Description>\r\n          Description: {bloodWork.description}\r\n        </Card.Description>\r\n        <Card.Description>Hematocrit: {bloodWork.hematocrit}</Card.Description>\r\n        <Card.Description>Hemoglobin: {bloodWork.hemoglobin}</Card.Description>\r\n        <Card.Description>\r\n          White Blood Cells Count: {bloodWork.wbCellsCount}\r\n        </Card.Description>\r\n        <Card.Description>\r\n          Red Blood Cells Count: {bloodWork.rbCellsCount}\r\n        </Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Button\r\n          as={Link}\r\n          to={`/manage/${bloodWork.id}`}\r\n          color=\"orange\"\r\n          floated=\"right\"\r\n        >\r\n          Edit BloodWork\r\n        </Button>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default observer(BloodWorkDetailsInfo);\r\n",{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":85,"column":1,"nodeType":"148","endLine":88,"endColumn":2},{"ruleId":"142","replacedBy":"149"},{"ruleId":"144","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":5,"column":8,"nodeType":"153","messageId":"154","endLine":5,"endColumn":24},{"ruleId":"151","severity":1,"message":"155","line":2,"column":27,"nodeType":"153","messageId":"154","endLine":2,"endColumn":34},{"ruleId":"151","severity":1,"message":"156","line":16,"column":3,"nodeType":"153","messageId":"154","endLine":16,"endColumn":12},{"ruleId":"151","severity":1,"message":"157","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":27},{"ruleId":"151","severity":1,"message":"155","line":3,"column":3,"nodeType":"153","messageId":"154","endLine":3,"endColumn":10},{"ruleId":"151","severity":1,"message":"158","line":4,"column":3,"nodeType":"153","messageId":"154","endLine":4,"endColumn":7},{"ruleId":"151","severity":1,"message":"159","line":5,"column":3,"nodeType":"153","messageId":"154","endLine":5,"endColumn":9},{"ruleId":"151","severity":1,"message":"160","line":7,"column":3,"nodeType":"153","messageId":"154","endLine":7,"endColumn":8},{"ruleId":"151","severity":1,"message":"161","line":8,"column":3,"nodeType":"153","messageId":"154","endLine":8,"endColumn":7},{"ruleId":"151","severity":1,"message":"162","line":13,"column":10,"nodeType":"153","messageId":"154","endLine":13,"endColumn":16},{"ruleId":"151","severity":1,"message":"163","line":14,"column":10,"nodeType":"153","messageId":"154","endLine":14,"endColumn":26},{"ruleId":"151","severity":1,"message":"164","line":17,"column":7,"nodeType":"153","messageId":"154","endLine":17,"endColumn":25},{"ruleId":"151","severity":1,"message":"165","line":21,"column":7,"nodeType":"153","messageId":"154","endLine":21,"endColumn":29},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["166"],["167"],"@typescript-eslint/no-unused-vars","'BloodWorksSearch' is defined but never used.","Identifier","unusedVar","'Segment' is defined but never used.","'isNumeric' is defined but never used.","'useContext' is defined but never used.","'Item' is defined but never used.","'Header' is defined but never used.","'Image' is defined but never used.","'List' is defined but never used.","'format' is defined but never used.","'RootStoreContext' is defined but never used.","'activityImageStyle' is assigned a value but never used.","'activityImageTextStyle' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]